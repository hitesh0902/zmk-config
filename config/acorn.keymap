#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <6>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2), RC(0,3) RC(0,4) RC(0,5)      RC(0,6) RC(0,7) RC(0,8), RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2), RC(1,3) RC(1,4) RC(1,5)      RC(1,6) RC(1,7) RC(1,8), RC(1,9) RC(1,10) RC(1,11)
            RC(2, 0) RC(2,1) RC(2,2), RC(2,3) RC(2,4) RC(2,5)     RC(2,6) RC(2, 7) RC(2,8), RC(2,9) RC(2,10) RC(2,11)
                                      RC(3,0) RC(3,1) RC(3,2)     RC(3,3) RC(3,4) RC(3,5)
        >;
    };

    combos {
        compatible = "zmk,combos";

        combo_studio_unlock {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&studio_unlock>;
        };

        hyper-key {
            bindings = <&kp LA(LG(LEFT_CONTROL))>;
            key-positions = <19 21 20>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3 4>;
        };

        backspace {
            bindings = <&kp BSPC>;
            key-positions = <8 9 7>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <2 3 4 5 13 14 15 16 17 25 26 27 28 29 1 36 37 38 0 12 24>;
            hold-trigger-on-release;
            flavor = "balanced";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41 23 35 11>;
            hold-trigger-on-release;
        };

        hma: hma {
            compatible = "zmk,behavior-hold-tap";
            label = "HMA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41 23 35 11 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        tp: tp {
            compatible = "zmk,behavior-hold-tap";
            label = "TP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <0>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T               &kp Y  &kp U                &kp I  &kp O      &kp P    &kp BSPC
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F  &kp G                      &kp H                &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V  &kp B                      &kp N                &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LGUI  &mo 1  &tp LEFT_ALT SPACE         &tp RIGHT_GUI ENTER  &mo 2  &kp LALT
            >;
        };

        lower_layer {
            display-name = "lower";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB        &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT         &kp CARET  &kp AMPS              &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&mt LCTRL ESC  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                         &kp MINUS             &kp EQUAL     &kp GRAVE             &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp PIPE
&kp LSHFT      &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0                         &kp UNDER             &kp PLUS      &kp TILDE             &kp LEFT_BRACE         &kp RIGHT_BRACE    &kp RIGHT_SHIFT
                                           &kp LGUI      &trans        &tp LEFT_ALT SPACE             &tp RIGHT_GUI RETURN  &trans        &kp LALT
            >;
        };

        raise_layer {
            display-name = "raise";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB        &kp F1      &kp F2      &kp F3                &kp F4                &kp F5              &kp F6  &kp F7                &kp F8         &kp F9        &kp F10    &kp BSPC
&mt LCTRL ESC  &kp F11     &kp F12     &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_PLAY_PAUSE            &kp LEFT              &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT      &bt BT_PRV  &bt BT_NXT  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans                      &kp HOME              &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp PIPE  &kp RIGHT_SHIFT
                                       &kp LGUI              &trans                &tp LEFT_ALT SPACE          &tp RIGHT_GUI RETURN  &trans         &kp LALT
            >;
        };

        tri_layer {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans    &trans         &trans       &trans   &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                &trans    &trans         &trans       &trans   &trans  &trans
                                    &trans        &trans        &trans                &trans    &trans         &trans
            >;

            label = "tri";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
